#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define UNUSED(x) (void)(x)

typedef struct stack_s
{
    int n;
    struct stack_s *next;
} stack_t;

stack_t *stack = NULL;

void push(stack_t **stack, int value)
{
    stack_t *new_node = malloc(sizeof(stack_t));
    if (!new_node)
    {
        fprintf(stderr, "Error: malloc failed\n");
        exit(EXIT_FAILURE);
    }

    new_node->n = value;
    new_node->next = *stack;
    *stack = new_node;
}

void pall(stack_t **stack)
{
    stack_t *current = *stack;
    while (current)
    {
        printf("%d\n", current->n);
        current = current->next;
    }
}

int main(void)
{
    char *line = NULL;
    size_t len = 0;
    ssize_t read;
    int line_number = 1;

    while ((read = getline(&line, &len, stdin)) != -1)
    {
        char *token = strtok(line, " \n");
        if (token)
        {
            if (strcmp(token, "push") == 0)
            {
                token = strtok(NULL, " \n");
                if (!token || !isdigit(*token))
                {
                    fprintf(stderr, "L%d: usage: push integer\n", line_number);
                    exit(EXIT_FAILURE);
                }
                push(&stack, atoi(token));
            }
            else if (strcmp(token, "pall") == 0)
            {
                pall(&stack);
            }
        }
        line_number++;
    }

    free(line);
    return 0;
}
